# Terraform Destroy Job
jobs:
  - job:
    steps:
      # Terraform Install Task
      - task: TerraformInstaller@1
        displayName: "Installing Terraform"
        inputs:
          terraformVersion: "${{ parameters.terraformVersion }}"
      # Terraform Init Task
      - task: TerraformTaskV4@4
        displayName: "Initializing Terraform"
        inputs:
          provider: "azurerm"
          command: "init"
          backendServiceArm: "${{ parameters.backendServiceArm }}"
          backendAzureRmResourceGroupName: "${{ parameters.backendAzureRmResourceGroupName }}"
          backendAzureRmStorageAccountName: "${{ parameters.backendAzureRmStorageAccountName }}"
          backendAzureRmContainerName: "${{ parameters.backendAzureRmContainerName }}"
          backendAzureRmKey: "${{ parameters.backendAzureRmKey }}"
          workingDirectory: "${{ parameters.workingDirectory }}"
      # Terraform Destroy Task
      - task: TerraformTaskV4@4
        displayName: "Destroying Terraform"
        condition: and(succeeded(), eq(variables['action'], 'Destroy'))
        inputs:
          provider: "azurerm"
          command: "destroy"
          commandOptions: '-input=false -auto-approve -var-file="../infra_variables/${{ parameters.environment }}/${{ parameters.environment }}.tfvars"'
          environmentServiceNameAzureRM: "${{ parameters.backendServiceArm }}"
          workingDirectory: "${{ parameters.workingDirectory }}"
